image: tmaier/docker-compose:latest
stages:
 - test
 - validate
 - build
 - deploy

test_crawler:
  stage: test 
  images: mzabolotnov/test_crawler:1.0
  script:
    - git clone https://github.com/express42/search_engine_crawler.git
    - git clone https://github.com/express42/search_engine_ui.git
    - cd $APP_HOME/search_engine_crawler
    - pip3 install -r requirements.txt -r requirements-test.txt
    - echo "Тестирование кода...search_engine_crawler"
    - python3 -m unittest discover -s tests/ > report_test_search_engine_crawler.txt
    - coverage run -m unittest discover -s tests/ >> report_test_search_engine_crawler.txt
    - coverage report --include crawler/crawler.py >> report_test_search_engine_crawler.txt
    - cd $APP_HOME/search_engine_ui
    - pip install -r requirements.txt -r requirements-test.txt
    - echo "Тестирование кода...search_engine_ui"
    - python -m unittest discover -s tests/ > report_test_search_engine_ui.txt
    - coverage run -m unittest discover -s tests/ >> report_test_search_engine_ui.txt
    - coverage report --include ui/ui.py >> report_test_search_engine_ui.txt
  artifacts:
    paths:
    - $APP_HOME/search_engine_crawler/report_test_search_engine_crawler.txt
    - $APP_HOME/search_engine_ui/report_test_search_engine_ui.txt

Validate-docker-compose:
  stage: validate
  services:
    - docker:dind
  script:
    - cd ./docker
    - docker-compose -f docker-compose-monitoring.yml -f docker-compose.yml config

Build_images:
  stage: build
  services:
   - docker:dind
  before_script:
   - docker info
   - docker-compose --version
  script:
   - cd docker
   - docker-compose -f docker-compose-monitoring.yml -f docker-compose.yml build
   - docker images

Start_crawler:
   stage: deploy
   services:
   - docker:dind
   script:
     - cd docker
     - docker-compose -f docker-compose-monitoring.yml -f docker-compose.yml up -d
     - docker ps
   when: manual
